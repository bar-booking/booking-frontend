name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn install --immutable

  Build:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: restore-build-cache
        uses: actions/cache@v2
        with:
          path: build
          key: build-${{ github.sha }}
      - if: steps.restore-build-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - if: steps.restore-build-cache.outputs.cache-hit != 'true'
        env:
          REACT_APP_BACKEND_URL: ${{ secrets.REACT_APP_BACKEND_URL }}
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
        run: yarn build

  ESLint:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn eslint . --max-warnings=0

  Prettier:
    needs: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('./yarn.lock') }}
      - run: yarn prettier --list-different .

  Preview:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository && github.event_name != 'push' }}
    needs: [Build, ESLint, Prettier]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: build
          key: build-${{ github.sha }}
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BOOKING_22515 }}
          projectId: booking-22515

  Deploy:
    if: ${{ github.event_name == 'push' }}
    needs: [Build, ESLint, Prettier]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: build
          key: build-${{ github.sha }}
      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BOOKING_22515 }}
          channelId: live
          projectId: booking-22515
